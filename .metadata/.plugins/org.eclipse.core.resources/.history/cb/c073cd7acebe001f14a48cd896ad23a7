package com.pelatro.automation.practiceAutomation.server;

import com.pelatro.automation.practiceAutomation.utils.*;

import cucumber.api.java.en.Given;
import cucumber.api.java.en.Then;
import cucumber.api.java.en.When;

public class ServerSteps {
	
	@Given("I created a directory (.*) in my home directory")
	public void createDirectory(String dirName) {
		new ConnectRemoteServer().execute("mkdir -p /home/pelatro/" + dirName);
		String ls = new ConnectRemoteServer().execute("ls /home/pelatro/");
		if (!ls.contains(dirName))
			throw new AssertionError("Directory creation is failed !!!");
	}
	
	@When("I write 5 files with 10 lines each in (.*)")
	public void writeFiles(String dirName) {
	    for (int i = 1; i <= 5; i++) {
	        String filePath = "/home/pelatro/" + dirName + "/file" + i + ".txt";     
	        new ConnectRemoteServer().execute("touch " + filePath);   
	        for (int j = 1; j <= 10; j++) {
	            new ConnectRemoteServer().execute("echo 'Line " + j + " of file" + i + "' >> " + filePath);
	        }
	    }
	}

	@Then("I list all the files in (.*)")
	public void listFiles(String dirName) {
	    String lsOutput = new ConnectRemoteServer().execute("ls /home/pelatro/" + dirName);
	    System.out.println("Files in directory " + dirName + ":");
	    System.out.println(lsOutput);
	    
	   
	}
	@Then("I concatenate all files in (.*) into a temp file")
	public void concatenateFiles(String dirName) {
	    ConnectRemoteServer remoteServer = new ConnectRemoteServer(); // Use the same server instance pattern
	    
	    String tempFilePath = "/home/pelatro/" + dirName + "/temp.txt";
	    
	    remoteServer.execute("cat /home/pelatro/" + dirName + "/* > " + tempFilePath);
	   
	    String lsOutput = remoteServer.execute("ls /home/pelatro/" + dirName);
	    if (!lsOutput.contains("temp_file.txt")) {
	        throw new AssertionError("Temporary file was not created!");
	    }
	   
	    System.out.println("All files concatenated into " + tempFilePath);
	}


}